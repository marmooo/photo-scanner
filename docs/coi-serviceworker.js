/*! coi-serviceworker v0.1.7 - Guido Zuidhof and contributors, licensed under MIT */let coepCredentialless=!1;typeof window=="undefined"?(self.addEventListener("install",()=>self.skipWaiting()),self.addEventListener("activate",e=>e.waitUntil(self.clients.claim())),self.addEventListener("message",e=>{if(!e.data)return;e.data.type==="deregister"?self.registration.unregister().then(()=>self.clients.matchAll()).then(e=>{e.forEach(e=>e.navigate(e.url))}):e.data.type==="coepCredentialless"&&(coepCredentialless=e.data.value)}),self.addEventListener("fetch",function(e){const t=e.request;if(t.cache==="only-if-cached"&&t.mode!=="same-origin")return;const n=coepCredentialless&&t.mode==="no-cors"?new Request(t,{credentials:"omit"}):t;e.respondWith(fetch(n).then(e=>{if(e.status===0)return e;const t=new Headers(e.headers);return t.set("Cross-Origin-Embedder-Policy",coepCredentialless?"credentialless":"require-corp"),coepCredentialless||t.set("Cross-Origin-Resource-Policy","cross-origin"),t.set("Cross-Origin-Opener-Policy","same-origin"),new Response(e.body,{status:e.status,statusText:e.statusText,headers:t})}).catch(e=>console.error(e)))})):(()=>{const n=window.sessionStorage.getItem("coiReloadedBySelf");window.sessionStorage.removeItem("coiReloadedBySelf");const o=n=="coepdegrade",e={shouldRegister:()=>!n,shouldDeregister:()=>!1,coepCredentialless:()=>!0,coepDegrade:()=>!0,doReload:()=>window.location.reload(),quiet:!1,...window.coi},t=navigator,s=t.serviceWorker&&t.serviceWorker.controller;s&&!window.crossOriginIsolated&&window.sessionStorage.setItem("coiCoepHasFailed","true");const i=window.sessionStorage.getItem("coiCoepHasFailed");if(s){const n=e.coepDegrade()&&!o&&!window.crossOriginIsolated;t.serviceWorker.controller.postMessage({type:"coepCredentialless",value:!(n||i&&e.coepDegrade())&&e.coepCredentialless()}),n&&(!e.quiet&&console.log("Reloading page to degrade COEP."),window.sessionStorage.setItem("coiReloadedBySelf","coepdegrade"),e.doReload("coepdegrade")),e.shouldDeregister()&&t.serviceWorker.controller.postMessage({type:"deregister"})}if(window.crossOriginIsolated!==!1||!e.shouldRegister())return;if(!window.isSecureContext){!e.quiet&&console.log("COOP/COEP Service Worker not registered, a secure context is required.");return}if(!t.serviceWorker){!e.quiet&&console.error("COOP/COEP Service Worker not registered, perhaps due to private mode.");return}t.serviceWorker.register(window.document.currentScript.src).then(n=>{!e.quiet&&console.log("COOP/COEP Service Worker registered",n.scope),n.addEventListener("updatefound",()=>{!e.quiet&&console.log("Reloading page to make use of updated COOP/COEP Service Worker."),window.sessionStorage.setItem("coiReloadedBySelf","updatefound"),e.doReload()}),n.active&&!t.serviceWorker.controller&&(!e.quiet&&console.log("Reloading page to make use of COOP/COEP Service Worker."),window.sessionStorage.setItem("coiReloadedBySelf","notcontrolling"),e.doReload())},t=>{!e.quiet&&console.error("COOP/COEP Service Worker failed to register:",t)})})()